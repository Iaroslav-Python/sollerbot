import os
import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.client.bot import DefaultBotProperties
from aiogram.filters import Command
from aiogram.types import InlineKeyboardMarkup
from aiogram.utils.keyboard import InlineKeyboardBuilder
from dotenv import load_dotenv
from aiohttp import web

# –í–µ–±-—Å–µ—Ä–≤–µ—Ä –¥–ª—è –ø–∏–Ω–≥–∞ (–∞–ø—Ç–∞–π–º)
async def handle_ping(request):
    return web.Response(text="‚úÖ I'm alive!")

async def start_web_app():
    PORT = int(os.getenv("PORT", 8080))
    app = web.Application()
    app.router.add_get("/", handle_ping)
    runner = web.AppRunner(app)
    await runner.setup()
    site = web.TCPSite(runner, "0.0.0.0", PORT)
    await site.start()
    print(f"‚úÖ Web ping server started on port {PORT}")
    while True:
        await asyncio.sleep(3600)  # —á—Ç–æ–±—ã —Å–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–≤–µ—Ä—à–∞–ª—Å—è

# –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–æ–∫–µ–Ω–∞ –∏–∑ .env
load_dotenv()
BOT_TOKEN = os.getenv("BOT_TOKEN")
if not BOT_TOKEN:
    raise RuntimeError("BOT_TOKEN is not set in .env")

bot = Bot(token=BOT_TOKEN, default=DefaultBotProperties(parse_mode="HTML"))
dp = Dispatcher()

PRICE_USD = 0.02
CRYPTO_LINK = "https://t.me/send?start=IVeBVwQXkTyH"
SUPPORT_CHAT = "https://t.me/soller_support"
ADMIN_CONTACT = "@fixdbk"
REVIEWS_LINK = "https://t.me/starsbyusd/4"

def get_start_keyboard() -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    kb.button(text="üöÄ –ö—É–ø–∏—Ç—å –∑–≤–µ–∑–¥—É", url=CRYPTO_LINK)
    kb.button(text="üí¨ –ü–æ–¥–¥–µ—Ä–∂–∫–∞", url=SUPPORT_CHAT)
    kb.adjust(1, 1)
    return kb.as_markup()

@dp.message(Command(commands=["start"]))
async def cmd_start(message: types.Message):
    text = (
        f"üåå <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ StarDrop!</b>\n\n"
        f"‚≠ê <i>–ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å –∫—É–ø–∏—Ç—å —Å–≤–æ—é –∑–≤–µ–∑–¥—É –≤—Å–µ–≥–æ –∑–∞ ‚âà ${PRICE_USD} ‚Äî –Ω–∞–≤—Å–µ–≥–¥–∞ ‚ú®</i>\n\n"
        f"üßÆ <i>–ß—Ç–æ–±—ã –ø–æ—Å—á–∏—Ç–∞—Ç—å —Å—É–º–º—É, –ø—Ä–æ—Å—Ç–æ –ø—Ä–∏—à–ª–∏ –º–Ω–µ —á–∏—Å–ª–æ ‚Äî –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–≤—ë–∑–¥ (–æ—Ç 100).</i>\n\n"
        f"üîê <b>–û–ø–ª–∞—Ç–∞:</b> –≤ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–µ —á–µ—Ä–µ–∑ @CryptoBot\n"
        f"üéÅ <b>–ü–æ–¥–¥–µ—Ä–∂–∫–∞:</b> –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è @soller_support\n"
        f"ü§î <b>–ù–µ –≤—ã–ø–ª–∞—Ç–∏–ª–∏ –∑–≤–µ–∑–¥—ã –≤ —Ç–µ—á–µ–Ω–∏–µ 3 —á–∞—Å–æ–≤?</b> –ü–∏—à–∏—Ç–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É {ADMIN_CONTACT}\n"
        f"üí¨ <b>–û—Ç–∑—ã–≤—ã:</b> <a href=\"{REVIEWS_LINK}\">—Å–º–æ—Ç—Ä–µ—Ç—å</a>"
    )
    await message.answer(text, reply_markup=get_start_keyboard())

@dp.message()
async def calculate_total(message: types.Message):
    text = message.text.strip()
    if text.isdigit() and int(text) > 0:
        qty = int(text)
        total_usd = qty * PRICE_USD
        reply = (
            f"üí´ –í—ã –≤—ã–±—Ä–∞–ª–∏ <b>{qty}</b> {'–∑–≤–µ–∑–¥—É' if qty == 1 else '–∑–≤—ë–∑–¥'}.\n"
            f"üí∞ –û–±—â–∞—è —Å—É–º–º–∞: <b>${total_usd:.2f}</b>\n\n"
            f"üöÄ –ß—Ç–æ–±—ã –æ–ø–ª–∞—Ç–∏—Ç—å, –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ:\n"
            f"{CRYPTO_LINK}"
        )
        await message.answer(reply)

async def main():
    await asyncio.gather(
        start_web_app(),
        dp.start_polling(bot)
    )

if name == "__main__":
    asyncio.run(main())
